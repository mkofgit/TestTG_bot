import smtplib
import os
import requests
from flask import Flask, request, jsonify
from email.mime.text import MIMEText

app = Flask(__name__)

# üîπ –î–ê–ù–ù–´–ï –î–õ–Ø –¢–ï–õ–ï–ì–†–ê–ú–ê
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN")  # –•—Ä–∞–Ω–∏—Ç—å –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è!
TELEGRAM_CHAT_ID = os.getenv("TELEGRAM_CHAT_ID")  # –ß–∞—Ç –¥–ª—è –æ—à–∏–±–æ–∫

# üîπ –î–ê–ù–ù–´–ï –î–õ–Ø EMAIL (–•—Ä–∞–Ω–∏—Ç—å –≤ Railway Variables)
SMTP_SERVER = "smtp.mail.ru"  # –ò—Å–ø–æ–ª—å–∑—É–µ–º Mail.ru
SMTP_PORT = 587
SMTP_LOGIN = "unityspace2024@mail.ru"  # –¢–≤–æ—è –ø–æ—á—Ç–∞
SMTP_PASSWORD = os.getenv("SMTP_PASSWORD")  # –ü–∞—Ä–æ–ª—å –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
JIVO_EMAIL = "idmurgpsfrtnjivosite@jivo-mail.com"  # Email-–∫–∞–Ω–∞–ª Jivo

@app.route('/telegram_webhook', methods=['POST'])
def telegram_webhook():
    """–û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ Telegram –∏ –ø–µ—Ä–µ—Å—ã–ª–∫–∞ –≤ Jivo —á–µ—Ä–µ–∑ Email"""
    data = request.json

    if "message" in data:
        chat_id = data["message"]["chat"]["id"]
        user_text = data["message"].get("text", "")

        # üîπ –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤ Jivo
        success = send_to_jivo_email(user_text)

        if not success:
            send_telegram_log(f"üö® –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Email –≤ Jivo:\n\n{user_text}")

    return jsonify({"status": "ok"})

def send_to_jivo_email(user_message):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ Jivo —á–µ—Ä–µ–∑ Email"""
    msg = MIMEText(f"üîî –ù–æ–≤—ã–π –∫–ª–∏–µ–Ω—Ç—Å–∫–∏–π –∑–∞–ø—Ä–æ—Å:\n\n{user_message}")
    msg["Subject"] = "üîπ –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å –∏–∑ Telegram"
    msg["From"] = SMTP_LOGIN
    msg["To"] = JIVO_EMAIL

    try:
        with smtplib.SMTP(SMTP_SERVER, SMTP_PORT) as server:
            server.starttls()
            server.login(SMTP_LOGIN, SMTP_PASSWORD)
            server.sendmail(SMTP_LOGIN, JIVO_EMAIL, msg.as_string())
        print("‚úÖ Email –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ Jivo")
        return True
    except Exception as e:
        print(f"üö® –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ Email: {str(e)}")
        return False

def send_telegram_log(text):
    """–û—Ç–ø—Ä–∞–≤–∫–∞ –æ—à–∏–±–∫–∏ –≤ Telegram"""
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {"chat_id": TELEGRAM_CHAT_ID, "text": text, "parse_mode": "Markdown"}
    try:
        requests.post(url, json=payload)
    except Exception as e:
        print(f"üö® –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ª–æ–≥–∞ –≤ Telegram: {str(e)}")

if __name__ == '__main__':
    from waitress import serve
    serve(app, host="0.0.0.0", port=5000)