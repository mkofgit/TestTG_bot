from flask import Flask, request, jsonify
import requests

app = Flask(__name__)

TELEGRAM_TOKEN = "7552421757:AAGgXf_YQ23TnoA8td1wiks9BorGNdXKrzM"
JIVO_API_URL = "https://api.jivosite.com/webhooks"
PROXY_SERVER_URL = "https://testtgbot-production.up.railway.app/proxy"  # –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ —Å–≤–æ–π URL

# –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã –∏ –∞–≤—Ç–æ–æ—Ç–≤–µ—Ç—ã
FAQ = {
    "—Ü–µ–Ω—ã": "–í—ã –º–æ–∂–µ—Ç–µ –æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è —Å —Ç–∞—Ä–∏—Ñ–∞–º–∏ –Ω–∞ –Ω–∞—à–µ–º —Å–∞–π—Ç–µ: https://example.com/pricing",
    "—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª": "–í–æ—Ç —Å–ø–∏—Å–æ–∫ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–µ–π –Ω–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞: https://example.com/features",
    "–ø–æ–¥–¥–µ—Ä–∂–∫–∞": "–°–≤—è–∂–∏—Ç–µ—Å—å —Å –Ω–∞—à–µ–π –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —á–µ—Ä–µ–∑ –∫–Ω–æ–ø–∫—É '–°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º'."
}

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Telegram
@app.route('/webhook', methods=['POST'])
def telegram_webhook():
    data = request.json
    
    if "message" in data:
        chat_id = data["message"]["chat"]["id"]
        text = data["message"].get("text", "").lower()
        
        if text == "/start":
            send_welcome_message(chat_id)
            return jsonify({"status": "ok"})
        
        for keyword, answer in FAQ.items():
            if keyword in text:
                send_message(chat_id, answer)
                return jsonify({"status": "ok"})
        
        send_operator_button(chat_id)
    
    elif "callback_query" in data:
        if data["callback_query"]["data"] == "ask_jivo":
            chat_id = data["callback_query"]["message"]["chat"]["id"]
            user_message = data["callback_query"]["message"].get("text", "–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç")
            send_to_jivo_proxy(chat_id, user_message)
            send_message(chat_id, "–í–∞—à –∑–∞–ø—Ä–æ—Å –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –æ–ø–µ—Ä–∞—Ç–æ—Ä—É. –û–∂–∏–¥–∞–π—Ç–µ –æ—Ç–≤–µ—Ç–∞!")
    
    return jsonify({"status": "ok"})

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π –≤ Telegram
def send_message(chat_id, text):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {"chat_id": chat_id, "text": text, "parse_mode": "HTML"}
    requests.post(url, json=payload)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∫–Ω–æ–ø–∫–∏ "–°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º"
def send_operator_button(chat_id):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": "–ù–µ –Ω–∞—à–ª–∏ –æ—Ç–≤–µ—Ç? –°–≤—è–∂–∏—Ç–µ—Å—å —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º.",
        "reply_markup": {
            "inline_keyboard": [[{"text": "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º", "callback_data": "ask_jivo"}]]
        }
    }
    requests.post(url, json=payload)

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –∑–∞–ø—Ä–æ—Å–∞ –≤ –ø—Ä–æ–∫—Å–∏-—Å–µ—Ä–≤–µ—Ä –¥–ª—è Jivo
def send_to_jivo_proxy(user_id, message):
    payload = {"message": message}
    headers = {"Content-Type": "application/json"}
    
    try:
        response = requests.post(PROXY_SERVER_URL, json=payload, headers=headers)
        print(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –ø—Ä–æ–∫—Å–∏: {payload}")
        print(f"–û—Ç–≤–µ—Ç –ø—Ä–æ–∫—Å–∏: {response.status_code}, {response.text}")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –≤ –ø—Ä–æ–∫—Å–∏: {str(e)}")

# –§—É–Ω–∫—Ü–∏—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è —Å –∫–Ω–æ–ø–∫–∞–º–∏
def send_welcome_message(chat_id):
    url = f"https://api.telegram.org/bot{TELEGRAM_TOKEN}/sendMessage"
    payload = {
        "chat_id": chat_id,
        "text": "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:",
        "parse_mode": "HTML",
        "reply_markup": {
            "inline_keyboard": [
                [{"text": "üìå –ß–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã", "callback_data": "faq"}],
                [{"text": "üìû –°–≤—è–∑–∞—Ç—å—Å—è —Å –æ–ø–µ—Ä–∞—Ç–æ—Ä–æ–º", "callback_data": "ask_jivo"}]
            ]
        }
    }
    requests.post(url, json=payload)

if __name__ == '__main__':
    from waitress import serve
    serve(app, host="0.0.0.0", port=5000)